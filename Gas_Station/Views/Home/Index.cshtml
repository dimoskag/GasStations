@using Jmelosegui.Mvc.GoogleMap
@model IEnumerable<Gas_Station.Models.GasStation>


@{
    ViewBag.Title = "Map";
}

<div>
    @{ 
        Html.GoogleMap()
       .Name("map")
       .Center(c => c.UseCurrentPosition().Latitude(37.984032).Longitude(23.728099))
       .Zoom(16)
       .Height(600)
       .Markers(m => m.Add().Window(window => window.Add().Content(@<text>You</text>)))
       .BindTo<Gas_Station.Models.GasStation, Marker>
(Model, mappings => mappings.For<Gas_Station.Models.GasStation>
   (
       binding => binding.ItemDataBound
           (
               (marker, gas) =>
               {
                   //marker.Address = gas.Address;
                   marker.Title = gas.Name;
                   marker.Latitude = gas.Latitude;
                   marker.Longitude = gas.Longitude;
                   marker.Window = new InfoWindow(marker)
                   {
                       Template =
                       {
                           Content = () => ViewContext.Writer.Write("<div><b>{0}<br>{1}</b><br>{2}<br><a href=\"https://www.google.com/maps?saddr=My+Location&daddr={3},{4}\" target=\"_blank\">Get direction</a></div>",gas.Brand,gas.Price,gas.Name,gas.Latitude,gas.Longitude)
                       }
                   };
               }
           )
   )
).Render();
 }

</div>

@section scripts
{
    @(Html.GoogleMap().ScriptRegistrar())
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCqyoMXUS9GC9pwrlIe1Tl9AyVoKEvX8KY&sensor=false" type="text/javascript"></script>
}





@*<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCqyoMXUS9GC9pwrlIe1Tl9AyVoKEvX8KY&sensor=false" type="text/javascript"></script>


    <style>
        #map_canvas img {
            max-width: none;
        }
    </style>

    <!-- This css is to give a nice big popup "info window" when a marker is clicked on the map -->
    <style>
        .infoDiv {
            height: 200px;
            width: 300px;
            -webkit-user-select: none;
            background-color: white;
        }
    </style>
    <br />
    <!-- This is the div that will contain the Google Map -->
    <div id="map_canvas" style="height: 550px;"></div>

    <!-- Enclose the Javascript in a "section" so that it is rendered in the correct order after scripts have been loaded etc -->
    @section scripts {
        <section class="scripts">

            <script type="text/javascript">

        $(document).ready(function () {
            Initialize();
        });

                if (navigator.geolocation) {
                    navigator.geolocation.getCurrentPosition(Initialize);
                } else {
                    alert("There is Some Problem on your current browser to get Geo Location!");
                }



        // Where all the fun happens
        function Initialize(position) {

            // Google has tweaked their interface somewhat - this tells the api to use that new UI

            google.maps.visualRefresh = true;
            var latitude = position.coords.latitude;
            var longitude = position.coords.longitude;
            var myPlace= new google.maps.LatLng(latitude, longitude);

            // These are options that set initial zoom level, where the map is centered globally to start, and the type of map to show
            var mapOptions = {
                zoom: 12,
                center: myPlace,
                mapTypeId: google.maps.MapTypeId.G_NORMAL_MAP
            };

            // This makes the div with id "map_canvas" a google map
            var map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);

            var marker=new google.maps.Marker({
                position: myPlace,
                title: "<div style = 'height:60px;width:200px'><b>Your location:</b><br />Latitude: "
                                + latitude + +"<br />Longitude: " + longitude
            })

            marker.setMap(map);
            var getInfoWindow = new google.maps.InfoWindow({ content: "<b>Your Current Location</b><br/> Latitude:" +
                                    latitude + "<br /> Longitude:" + longitude + "" });
            getInfoWindow.open(map, marker);

            // a sample list of JSON encoded data of places to visit in Tunisia
            // you can either make up a JSON list server side, or call it from a controller using JSONResult
            var data = [
                      { "Id": 1, "PlaceName": "Zaghouan", "GeoLong": "36.401081", "GeoLat": "10.16596" },
                      { "Id": 2, "PlaceName": "Hammamet ", "GeoLong": "36.4", "GeoLat": "10.616667" },
                      { "Id": 3, "PlaceName": "Sousse", "GeoLong": "35.8329809", "GeoLat": "10.63875" },
                      { "Id": 4, "PlaceName": "Sfax", "GeoLong": "34.745159", "GeoLat": "10.7613" }
                   ];

            // Using the JQuery "each" selector to iterate through the JSON list and drop marker pins
            $.each(data, function (i, item) {
                var marker = new google.maps.Marker({
                    'position': new google.maps.LatLng(item.GeoLong, item.GeoLat),
                    'map': map,
                    'title': item.PlaceName
                });

                // Make the marker-pin blue!
                marker.setIcon('http://maps.google.com/mapfiles/ms/icons/blue-dot.png')

                // put in some information about each json object - in this case, the opening hours.
                var infowindow = new google.maps.InfoWindow({
                    content: "<div class='infoDiv'><h2>" + item.PlaceName + "</div></div>"
                });

                // finally hook up an "OnClick" listener to the map so it pops up out info-window when the marker-pin is clicked!
                google.maps.event.addListener(marker, 'click', function () {
                    infowindow.open(map, marker);
                });

            })
        }
            </script>
        </section>
    }*@


      